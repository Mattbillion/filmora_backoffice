import { Suspense } from 'react';
import { Plus } from 'lucide-react';

import { Heading } from '@/components/custom/heading';
import { Button, buttonVariants } from '@/components/ui/button';
import { DataTable } from '@/components/ui/data-table';
import { Separator } from '@/components/ui/separator';
import { SearchParams } from '@/services/api/types';

{{#if endpoints.list}}
    import {
        {{#each endpoints.list}}
            {{this.summary}}{{#unless @last}},{{/unless}}
        {{/each}}
    } from '@/services/{{service}}';

    import {
    {{#each endpoints.list}}
        {{this.schemaImports}}{{#unless @last}},{{/unless}}
    {{/each}}
    } from '@/services/schema';
{{/if}}

import { {{camelCase service}}Columns } from './columns';
{{#if (eq pathType 'all-in-one')}}
    {{#if endpoints.create}}
        import { CreateDialog } from './components';
    {{/if}}
{{/if}}
import { auth } from '@/app/(auth)/auth';
import {checkPermission} from "@/lib/permission";

export const dynamic = 'force-dynamic';

export default async function {{pascalCase service}}Page(props: {
  searchParams?: SearchParams< {{#each endpoints.list}}{{this.queryArg}}{{#unless @last}}&{{/unless}}{{/each}} >;
}) {
  const session = await auth();
    {{#if endpoints.list}}
            const searchParams = await props.searchParams;
    {{/if}}
    {{#each endpoints.list}}
      const { data } = await {{this.summary}}(
        {{#if this.pathArgs}}"-1",// {{this.pathArgs}} {{/if}} // Check and fix, its generated and might be dumb
      searchParams);
    {{/each}}

    const list = data?.data || []; // Check and fix, its generated and might be dumb
    const count = data?.total_count ?? list.length; // Check and fix, its generated and might be dumb

  return (
    <>
      <div className="flex items-start justify-between">
        <Heading
          title={`{{sentenceCase service}} list (${count})`}
        />
        {{#if (eq pathType 'all-in-one')}}
            {{#if endpoints.create}}
                  {
                  checkPermission(session, []) &&
                      <CreateDialog>
                          <Button className="text-xs md:text-sm">
                              <Plus className="h-4 w-4" /> Add New
                          </Button>
                      </CreateDialog>
                  }
            {{/if}}
        {{else}}
            {{#if endpoints.create}}
                {checkPermission(session, ['create_template']) && (
                <Link
                        href="/#"
                        className={buttonVariants({ "className": 'text-xs md:text-sm' })}
                >
                    <Plus className="h-4 w-4" /> dd New
                </Link>
                )}
            {{/if}}
        {{/if}}
      </div>
      <Separator />
      <Suspense fallback="Loading">
        <DataTable
          columns={ {{camelCase service}}Columns }
          data={list}
          rowCount={count}
        />
      </Suspense>
    </>
  );
}
